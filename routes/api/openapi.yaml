
#接口文档编写  https://swagger.io/docs/specification/basic-structure/

openapi: 3.0.1
info:
  title: Swagger Petstore
  description: 'This is a sample server Petstore server.  You can find out more about Swagger
    at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). For
    this sample, you can use the api key `special-key` to test the authorization filters.'
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://localhost:3000
    description: 测试
  - url: http://localhost:3001
    description: 正式的


paths:
  /httpDate/home1:
    get:
      tags:
        - httpDate
      summary: 获取所有的用户
      description: 获取所有的用户
      operationId: createUser
      # requestBody:
      #   description: Created user object
      #   content:
      #     '*/*':
      #       schema:
      #         $ref: '#/components/schemas/User'
      #   required: true
      responses:
        default:
          description: successful operation
          content: {}
      security:
        - token:
            - write:httpDate
            - read:httpDate
  /httpDate/home2:
    post:
      tags:
        - httpDate
      summary: 根据姓名进行查询
      operationId: createUsersWithArrayInput
      parameters:
        - name: name
          in: query
          description: 姓名
          required: false
          schema:
            type: string
      responses:
        200:
          description: successful operation
        400:
          description: Invalid ID supplied
        404:
          description: Order not found
      security:
        - token:
            - write:httpDate
            - read:httpDate
  /httpDate/home3:
    post:
      tags:
        - httpDate
      summary: 增加用户
      operationId: createUsersWithListInput
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/why'
      responses:
        200:
          description: successful operation
        400:
          description: Invalid ID supplied
        404:
          description: Order not found
      security:
        - token:
            - write:httpDate
            - read:httpDate
  /httpDate/home4/{id}:
    put:
      tags:
        - httpDate
      summary: 根据id修改用户的姓名和地址
      operationId: loginUser111
      parameters:
        - name: id
          in: path
          description: 根据id修改用户的姓名和地址
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
        400:
          description: Invalid ID supplied
        404:
          description: Order not found
      security:
        - token:
            - write:httpDate
            - read:httpDate
  /httpDate/home5/{id}:
    delete:
      tags:
        - httpDate
      summary: 删除用户
      operationId: logoutUser
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
        400:
          description: Invalid ID supplied
        404:
          description: Order not found
      security:
        - token:
            - write:httpDate
            - read:httpDate
  /httpDate/home6:
    post:
      tags:
        - httpDate
      summary: 多条增删改查，回滚
      operationId: getUserByName
      responses:
        200:
          description: successful operation
        400:
          description: Invalid ID supplied
        404:
          description: Order not found
      security:
        - token:
            - write:httpDate
            - read:httpDate
  /httpDate/uploadImage:
    post:
      tags:
        - httpDate
      summary: uploads an image
      operationId: uploadFile
      parameters:
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: string
                  description: file to upload
                  format: binary
      responses:
        200:
          description: successful operation
        400:
          description: Invalid ID supplied
        404:
          description: Order not found
      security:
        - token:
            - write:httpDate
            - read:httpDate
  /httpDate/login:
    post:
      tags:
        - httpDate
      summary: 登录
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
      responses:
        200:
          description: successful operation
        400:
          description: Invalid ID supplied
        404:
          description: Order not found

components:
  schemas:
    why:
      type: object
      properties:
        name:
          type: string
          description: 姓名
        address:
          type: string
          description: 地址
    login:
      type: object
      properties:
        acount:
          type: string
          description: 账户
        pw:
          type: string
          description: 密码
  securitySchemes:
    token:
      type: apiKey
      name: api_key
      in: header